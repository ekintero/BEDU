Reto 1: Expresiones regulares
1. Objetivos 🎯
Poner en práctica el uso de expresiones regulares.
2. Requisitos 📋
MongoDB Compass instalado.
3. Desarrollo 🚀
Usando la base de datos sample_airbnblistingsAndReviews, realiza los siguientes filtros:

  Propiedades que no permitan fiestas.
  Visto la consulta desde past Queries
  FILTER
  {
    house_rules: RegExp('no parties', i)
  }
  {house_rules: /no parties/i}

Propiedades que admitan mascotas.

  Visto la consulta desde past Queries
  FILTER
  {
    house_rules: RegExp('pets allowed', i)
  }
  {house_rules: /pets allowed/i}

Propiedades que no permitan fumadores.
  Visto la consulta desde past Queries
  FILTER
  {
    house_rules: RegExp('no Smoking', i)
  }
  {house_rules: /no Smoking/i}	

Propiedades que no permitan fiestas ni fumadores.
  Visto la consulta desde past Queries
  {
   house_rules: RegExp('no Smoking  | no Parties', i)
  }
  {house_rules: /no Smoking  | no Parties/i}

Reto 2: Notación punto y arreglos
1. Objetivos 🎯
Proyectar columnas sobre distintos documentos para repasar algunos conceptos.
2. Requisitos 📋
MongoDB Compass instalado.
3. Desarrollo 🚀
Usando la colección sample_airbnb.listingsAndReviews, 
agrega un filtro que permita obtener todas las publicaciones que tengan 50 o más comentarios, 
que la valoración sea mayor o igual a 80, que cuenten con conexión a Internet vía cable y estén ubicada en Brazil.

{
  number_of_reviews: {$gte: 50}, 
  "review_scores.review_scores_rating": {$gte: 80}, 
  amenities: /ethernet/i, 
  "address.country_code": /BR/
}

Reto 3: Introducción a las agregaciones
1. Objetivos 🎯
Proyectar columnas sobre distintos documentos para repasar algunos conceptos.
2. Requisitos 📋
MongoDB Compass instalado.
3. Desarrollo 🚀
Usando la colección sample_airbnb.listingsAndReviews,
mediante el uso de agregaciones, 
encontrar el número de publicaciones que tienen conexión a Internet, sea desde Wifi o desde cable (Ethernet).

[{
    $match: {
        amenities: {
            $in: ["Wifi", "Ethernet"]
        }
    }
}, {
    $group: {
        _id: null,
        Total: {
            $sum: 1
        }
    }
}]
